{"ast":null,"code":"import axios from \"axios\";\nimport { createReducer, createAsyncThunk } from \"@reduxjs/toolkit\"; //---------FAVORITES---------\n\nexport const getFavorites = createAsyncThunk(\"GET_FAVORITES\", id => {\n  // console.log(\"MOVIE NAME: \",movieName.target.value)\n  if (id) return axios.get(`/api/favorites?userId=${id}`).then(res => res.data);\n  return axios.get(\"/api/favorites\").then(res => res.data); //get: api/movies\n});\nexport const addToFavorites = createAsyncThunk(\"ADD_TO_FAVORITES\", ({\n  userId,\n  imdbID,\n  Poster,\n  Title,\n  Year,\n  Type\n}, thunkAPI) => {\n  const {\n    user\n  } = thunkAPI.getState();\n  if (!user.data.id) throw new Error(\"You need to be logged in\");\n  return axios.post(`/api/favorites?userId=${user.data.id}`, {\n    userId: userId,\n    imdbID: imdbID,\n    Poster: Poster,\n    Title: Title,\n    Year: Year,\n    Type: Type\n  }).then(res => res.data);\n});\nexport const removeFromFavorites = createAsyncThunk(\"REMOVE_FROM_FAVORITES\", (movieId, thunkAPI) => {\n  const {\n    user\n  } = thunkAPI.getState();\n  if (!user.data) throw new Error(\"You need to be logged in\");\n  return axios.delete(`/api/favorites?userId=${user.data.id}&movieId=${movieId}`);\n});\nconst favoritesReducer = createReducer([], {\n  [getFavorites.fulfilled]: (state, action) => action.payload,\n  [addToFavorites.fulfilled]: (state, action) => action.payload,\n  [removeFromFavorites.fulfilled]: (state, action) => action.payload\n});\nexport default favoritesReducer;","map":{"version":3,"sources":["/Users/guillermosotelo/Documents/P5/BC/Open Movie DB/src/store/favorites.js"],"names":["axios","createReducer","createAsyncThunk","getFavorites","id","get","then","res","data","addToFavorites","userId","imdbID","Poster","Title","Year","Type","thunkAPI","user","getState","Error","post","removeFromFavorites","movieId","delete","favoritesReducer","fulfilled","state","action","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,kBAAhD,C,CAEA;;AAEA,OAAO,MAAMC,YAAY,GAAGD,gBAAgB,CAAC,eAAD,EAAmBE,EAAD,IAAQ;AAClE;AACA,MAAGA,EAAH,EAAO,OAAOJ,KAAK,CAACK,GAAN,CAAW,yBAAwBD,EAAG,EAAtC,EAAyCE,IAAzC,CAA+CC,GAAD,IAASA,GAAG,CAACC,IAA3D,CAAP;AACP,SAAOR,KAAK,CAACK,GAAN,CAAU,gBAAV,EAA4BC,IAA5B,CAAkCC,GAAD,IAASA,GAAG,CAACC,IAA9C,CAAP,CAHkE,CAIlE;AACD,CALyC,CAArC;AAOL,OAAO,MAAMC,cAAc,GAAGP,gBAAgB,CAC5C,kBAD4C,EAE5C,CAAC;AAAEQ,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,MAAlB;AAA0BC,EAAAA,KAA1B;AAAiCC,EAAAA,IAAjC;AAAuCC,EAAAA;AAAvC,CAAD,EAAgDC,QAAhD,KAA6D;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAWD,QAAQ,CAACE,QAAT,EAAjB;AACA,MAAI,CAACD,IAAI,CAACT,IAAL,CAAUJ,EAAf,EAAmB,MAAM,IAAIe,KAAJ,CAAU,0BAAV,CAAN;AACnB,SAAOnB,KAAK,CACToB,IADI,CACE,yBAAwBH,IAAI,CAACT,IAAL,CAAUJ,EAAG,EADvC,EAC0C;AAC3CM,IAAAA,MAAM,EAAEA,MADmC;AAE3CC,IAAAA,MAAM,EAAEA,MAFmC;AAG3CC,IAAAA,MAAM,EAAEA,MAHmC;AAI3CC,IAAAA,KAAK,EAAEA,KAJoC;AAK3CC,IAAAA,IAAI,EAAEA,IALqC;AAM3CC,IAAAA,IAAI,EAAEA;AANqC,GAD1C,EASJT,IATI,CASEC,GAAD,IAASA,GAAG,CAACC,IATd,CAAP;AAUD,CAf2C,CAAvC;AAkBP,OAAO,MAAMa,mBAAmB,GAAGnB,gBAAgB,CACjD,uBADiD,EAEjD,CAACoB,OAAD,EAAUN,QAAV,KAAuB;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAWD,QAAQ,CAACE,QAAT,EAAjB;AACA,MAAI,CAACD,IAAI,CAACT,IAAV,EAAgB,MAAM,IAAIW,KAAJ,CAAU,0BAAV,CAAN;AAChB,SAAOnB,KAAK,CACTuB,MADI,CACI,yBAAwBN,IAAI,CAACT,IAAL,CAAUJ,EAAG,YAAWkB,OAAQ,EAD5D,CAAP;AAGD,CARgD,CAA5C;AAYT,MAAME,gBAAgB,GAAGvB,aAAa,CAAC,EAAD,EAAK;AACvC,GAACE,YAAY,CAACsB,SAAd,GAA0B,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OADb;AAEvC,GAACnB,cAAc,CAACgB,SAAhB,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC,OAFf;AAGvC,GAACP,mBAAmB,CAACI,SAArB,GAAiC,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AAHpB,CAAL,CAAtC;AAMA,eAAeJ,gBAAf","sourcesContent":["import axios from \"axios\"\nimport { createReducer, createAsyncThunk } from \"@reduxjs/toolkit\"\n\n//---------FAVORITES---------\n\nexport const getFavorites = createAsyncThunk(\"GET_FAVORITES\", (id) => {\n    // console.log(\"MOVIE NAME: \",movieName.target.value)\n    if(id) return axios.get(`/api/favorites?userId=${id}`).then((res) => res.data)\n    return axios.get(\"/api/favorites\").then((res) => res.data)\n    //get: api/movies\n  })\n  \n  export const addToFavorites = createAsyncThunk(\n    \"ADD_TO_FAVORITES\",\n    ({ userId, imdbID, Poster, Title, Year, Type }, thunkAPI) => {\n      const { user } = thunkAPI.getState();\n      if (!user.data.id) throw new Error(\"You need to be logged in\")\n      return axios\n        .post(`/api/favorites?userId=${user.data.id}`, {\n            userId: userId, \n            imdbID: imdbID,\n            Poster: Poster,\n            Title: Title,\n            Year: Year,\n            Type: Type\n        })\n        .then((res) => res.data)\n    }\n  )\n  \n  export const removeFromFavorites = createAsyncThunk(\n    \"REMOVE_FROM_FAVORITES\",\n    (movieId, thunkAPI) => {\n      const { user } = thunkAPI.getState();\n      if (!user.data) throw new Error(\"You need to be logged in\")\n      return axios\n        .delete(`/api/favorites?userId=${user.data.id}&movieId=${movieId}`)\n        \n    }\n  )\n  \n\nconst favoritesReducer = createReducer([], {\n    [getFavorites.fulfilled]: (state, action) => action.payload,\n    [addToFavorites.fulfilled]: (state, action) => action.payload,\n    [removeFromFavorites.fulfilled]: (state, action) => action.payload,\n})\n\nexport default favoritesReducer;"]},"metadata":{},"sourceType":"module"}